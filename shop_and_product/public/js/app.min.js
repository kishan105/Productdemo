
////__________________________COMMON FUNCTIONS____________________________///
jQuery.ajaxSetup({
    headers: {
        'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
    }
});
//______________ ajax requreset_____________________
function ajax_request(url, method, data, success_callback, error_callback) {
    jQuery.ajax({
        type: method,
        url: url,
        data: data,
        processData: false,
        contentType: false,
        success: function (response, textStatus, jqXHR) {
            // One.loader('hide')
            // $("#page-loader").hide();
            if (jqXHR.status === 200) {
                success_callback(response);
            } else {
                error_callback(response);
            }
        },
        error: function (errResponse) {
            // One.loader('hide')
            error_callback(errResponse);
            // $("#page-loader").hide();
        },
        beforeSend: function () {
            // One.loader('show');
        },
    })
}
//______________ Noti Notificaitons_____________________
jQuery(function () { One.helpers('notify'); });
function _notify(type, message) {
    let icon = "";
    if (type == 'success') {
        icon = "fa fa-check mr-1";
    } else if (type == "warning") {
        icon = "fa fa-exclamation mr-1";
    } else {
        icon = "fa fa-times mr-1";
    }
    One.helpers('notify', {
        type: type,
        icon: icon,
        message: message,
        from: 'top', align: 'center',
    });
}
//______________  Delete Confrimation_____________________//
function confirmBeforDelete(url, data, callBack = "") {
    Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!',
        showLoaderOnConfirm: true,
        preConfirm: function () {
            return new Promise(function (resolve) {
                $.ajax({
                    url: url,
                    type: 'POST',
                    data: data,
                    dataType: 'json',
                    processData: false,
                    contentType: false,
                })
                    .done(function (response, text, jqXHR) {
                        if (jqXHR.status === 200) {
                            if (response.status === 200)
                                Swal.fire('Deleted!', response.message, 'success');
                            else
                                Swal.fire('Oops...', response.message, 'error');
                        } else {
                            Swal.fire('Oops...', response.message, 'error');
                        }
                        if (callBack !== "") {
                            callBack();
                        }
                    })
                    .fail(function (data) {
                        Swal.fire('Oops...', data.responseJSON.message, 'error');
                    });
            });
        },
        allowOutsideClick: false
    });
}

//______________   Confirmation befor approve_____________________/
function confirmBeforApprove(url, data, callBack = "") {
    Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'success',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, Approve it!',
        showLoaderOnConfirm: true,
        preConfirm: function () {
            return new Promise(function (resolve) {
                $.ajax({
                    url: url,
                    type: 'POST',
                    data: data,
                    dataType: 'json',
                    processData: false,
                    contentType: false,
                })
                    .done(function (response) {
                        if (response.status === 200) {
                            Swal.fire('Approved!', response.message, 'success');
                        } else {
                            Swal.fire('Oops...', response.message, 'error');
                        }
                        if (callBack !== "") {
                            callBack();
                        }
                    })
                    .fail(function (data) {
                        Swal.fire('Oops...', data.responseJSON.message, 'error');
                    });
            });
        },
        allowOutsideClick: false
    });
}
//______________   Confirmation before reject_______________/
function confirmBeforReject(url, data, callBack = "") {
    Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, Reject it!',
        showLoaderOnConfirm: true,
        preConfirm: function () {
            return new Promise(function (resolve) {
                $.ajax({
                    url: url,
                    type: 'POST',
                    data: data,
                    dataType: 'json',
                    processData: false,
                    contentType: false,
                })
                    .done(function (response) {
                        if (response.status === 200) {
                            Swal.fire('Rejected!', response.message, 'success');
                        } else {
                            Swal.fire('Oops...', response.message, 'error');
                        }

                        if (callBack !== "") {
                            callBack();
                        }
                    })
                    .fail(function (data) {
                        Swal.fire('Oops...', data.responseJSON.message, 'error');
                    });
            });
        },
        allowOutsideClick: false
    });
}
//______________  Formate Date In DD/MM/YYYY FORMAT_______________/
function formattedDate(d = new Date) {
    return [d.getDate(), d.getMonth() + 1, d.getFullYear()]
        .map(n => n < 10 ? `0${n}` : `${n}`).join('/');
}
//_________________Save Cookies________________________________
function setCookie(name, value, days = 30) {
    var expires = "";
    if (days) {
        var date = new Date();
        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
        expires = "; expires=" + date.toUTCString();
    }
    document.cookie = name + "=" + (value || "") + expires + "; path=/";
}
//_________________Get Cookies________________________________
function getCookie(name) {
    var nameEQ = name + "=";
    var ca = document.cookie.split(';');
    for (var i = 0; i < ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ') c = c.substring(1, c.length);
        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
    }
    return null;
}
//_________________Erase Cookies________________________________
function eraseCookie(name) {
    document.cookie = name + '=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;';
}

/// Add Data in Cookie
$(function () {
    let sideBar = getCookie('sideBar');
    if (sideBar) {
        $(".sidebar-dark").addClass("sidebar-mini");
    } else {
        $(".sidebar-dark").removeClass("sidebar-mini");
    }
    $(".sideBarHide").on("click", function () {
        let sideBar = getCookie('sideBar');
        if (sideBar) {
            setCookie('sideBar', false);
        } else {
            setCookie('sideBar', true);
        }
    });
});




////__________________________________FIREBASE__________________________________
// var config = {
//     apiKey: "AIzaSyAcZqmOmebQDqROO79-iE9L1b79WF8AVQA",
//     authDomain: "pharmassist-c5756.firebaseapp.com",
//     projectId: "pharmassist-c5756",
//     storageBucket: "pharmassist-c5756.appspot.com",
//     messagingSenderId: "259668654360",
//     appId: "1:259668654360:web:e3b174f0db57c772df066d",
//     measurementId: "G-H453GLWRJM"
// };

// firebase.initializeApp(config);
// const messaging = firebase.messaging();
// messaging.requestPermission()
//     .then(function () {
//         console.log('Notification permission granted.');
//         return messaging.getToken();
//     })
//     .then(function (token) {
//         save_device_token(token);
//         // document.getElementById('token_id').innerHTML = token;
//     })
//     .catch(function (err) { // Happen if user deney permission
//         console.log('Unable to get permission to notify.', err);
//         save_device_token('');
//     });
// messaging.onMessage(function (payload) {
//     console.log('onMessage', payload);
//     var options = {
//               body: payload.notification.body,
//               icon: payload.notification.icon
//           };
//           var n = new Notification(payload.notification.title, options);
//           setTimeout(n.close.bind(n), 5000);
// });
// function save_device_token(token) {
    
//     if(token!=""){
        
//             let data = new FormData;
//             data.append("device_token",token);
//             data.append('_token', $('meta[name="csrf-token"]').attr('content'));
//             data.append('type','admin');
//             data.append('id',$("#login_id").val());
//             ajax_request("save-divice-token","POST",data,device_success,device_error);
//             function device_success(response){
//                 console.log(response.message);
//             }
//             function device_error(response) {
//                 console.log(response.message);
//             }
//         // }
//     }
    
// }